<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jwi.work.user.mapper.UserMapper">

	<!-- 회원가입 부분 -->
	<insert id="register" parameterType="com.jwi.work.user.dto.User">
		INSERT INTO user
		(email,pw,nickName,gender)value(#{email},HEX(AES_ENCRYPT(#{pw}, SHA2('abcabc', 256))),#{nickName},#{gender})
	</insert>
	<select id="emailTest" resultType="int" parameterType="String">
		select count(*) from user where email=#{email}
	</select>
	<select id="nickNameTest" resultType="int" parameterType="String">
		select count(*) from user where nickName=#{nickName}
	</select>
	<!-- 로그인 부분 -->
	<!-- 유저 정보체크 -->
	<select id="loginCheck" resultType="int" parameterType="com.jwi.work.user.dto.User">
		select count(*) from user where email=#{email} and pw=HEX(AES_ENCRYPT(#{pw}, SHA2('abcabc', 256)))
	</select>
	<!-- 벤 아이디 리스트 -->
	<select id="banEmailList" resultType="String">
		select email from user where state = 'deactivate'
	</select>
	<!-- email체크 -->
	<select id="emailCheck" resultType="int" parameterType="String">
		select count(*) from user where email=#{email}
	</select>
    <!-- 유저 userKey체크 후 유저정보 빼기 -->
	<select id="userInfo" resultType="com.jwi.work.user.dto.User" parameterType="String">
    select *,
           AES_DECRYPT(UNHEX(pw), SHA2('abcabc', 256)) as pw
    from user
    where userKey = #{userKey}
	</select>
	<!-- 유저 key값 받아오기 -->
	<select id="getUserKey" resultType="String" parameterType="String">
		select userKey from user where email = #{email}
	</select>
	<!-- 로그인 로그찍기  -->
	<insert id="saveLog" parameterType="com.jwi.work.user.dto.LoginLog">
		INSERT INTO loginLog
		(userKey,loginSuccess)value(#{userKey},#{loginSuccess})
	</insert>
	<!-- sessionId로 유저 key값 받아오기 -->
	<select id="getSessionUser" resultType="String" parameterType="String">
		select userKey from userConnection where sessionId = #{sessionId}
	</select>
	<!-- session 아이디 발급하기-->
	<insert id="saveSession" parameterType="com.jwi.work.user.dto.UserConnection">
		INSERT INTO userConnection
		(userKey,sessionId)value(#{userKey},#{sessionId})
	</insert>
	<!-- 유저SessionId업데이트 -->
	<update id="updateSessionId" parameterType="com.jwi.work.user.dto.UserConnection">
    	UPDATE userConnection SET `sessionId` = #{sessionId} WHERE `userKey` = #{userKey}
    </update>
    <!-- 유저 session 발급아이디 체크하기 -->
	<select id="sessionUserCheck" resultType="int" parameterType="String">
		select count(*) from userConnection where userKey = #{userKey}
	</select>
	<!-- 비밀번호 틀린 카운트 유저테이블에서 받아오기-->
	<select id="wrongCount" resultType="int" parameterType="String">
		select pwWrong from user where userKey = #{userKey}
	</select>
	<!-- 유저 pwWrong 업데이트 -->
	<update id="updatePwWrong" parameterType="com.jwi.work.user.dto.User">
    	UPDATE user SET `pwWrong` = #{pwWrong} WHERE `userKey` = #{userKey}
    </update>
	<!-- 세션ID로 유저 키값 찾기 -->
	<select id="getUserKeyBySessionId" resultType="int" parameterType="String">
		SELECT `userKey` FROM `userConnection` WHERE `sessionId` = #{sessionId}
	</select>
	<!-- 유저 pw 업데이트 -->
	<update id="updatePw" parameterType="com.jwi.work.user.dto.User">
    	UPDATE User SET `pw` = HEX(AES_ENCRYPT(#{pw}, SHA2('abcabc', 256))) WHERE `email` = #{email}
    </update>
    <!-- 밴 목록 불러오기 -->
    <select id="getBannedUser" resultType="com.jwi.work.user.dto.Banned">
    	SELECT * FROM `banned` WHERE userKey = #{userKey} ORDER BY `bannedKey` DESC LIMIT 1
    </select>
    <!-- 유저 정보 불러오기 -->
    <select id="getUserInfo" resultType="com.jwi.work.user.dto.User">
    	SELECT * FROM `user` WHERE userKey = #{userKey}
    </select>
    <!-- 모든 유저 정보 불러오기 -->
    <select id="getAllUser" resultType="com.jwi.work.user.dto.User">
    	SELECT userKey, email, nickName, gender, pwWrong, birthday, state, createdAt, updatedAt
    	FROM user
   	</select>
    <!-- 닉네임 불러오기 -->
    <select id="getNickName" parameterType="int" resultType="String">
    	SELECT nickName FROM `user` WHERE userKey = #{userKey}
    </select>
    <!-- 유저상태 활성화 업데이트문 -->
    <update id="updateAct" parameterType="int">
    	UPDATE `user` SET `state` = 'activate' WHERE userKey = #{userKey};
    </update>
    <!-- 유저상태 비활성화 업데이트문 -->
    <update id="updateDeAct" parameterType="int">
    	UPDATE `user` SET `state` = 'deactivate' WHERE userKey = #{userKey};
    </update>
    <!-- 이메일 불러오기 -->
    <select id="getUserEmail" parameterType="int" resultType="String">
	    SELECT email FROM user WHERE userKey = #{userKey}
	</select>
	<!-- 유저 탈퇴 상태로 업데이트 -->
	<update id="resignUser" parameterType="int">
		UPDATE `user` SET `state` = 'secession', updatedAt = now() WHERE userKey = #{userKey}
	</update>
	<!-- 닉네임 업데이트 -->
	<update id="updateNickName" parameterType="com.jwi.work.user.dto.User">
    	UPDATE `user` SET `nickName` = #{nickName} WHERE `email` = #{email}
    </update>
</mapper>