<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jwi.work.channel.mapper.PostMapper">

	<select id="postCount" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM post WHERE channelKey = #{channelKey}
	</select>
	
	<select id="postList" parameterType="map" resultType="com.jwi.work.channel.dto.postDto.PostDto">
		SELECT 
			post.postKey,
			post.content,
			post.image,
			post.state,
			post.createdAt,
			post.updatedAt,
			commentSummary.commentCount,
			likeSummary.likeCount,
			user.nickName,
			
			CASE 
            	WHEN EXISTS(
            		SELECT  
            			1 
            		FROM 
            			`like` l
            		JOIN
            			userConnection uc ON l.userKey = uc.userKey
            		WHERE 
            			l.postKey = post.postKey 
            			AND uc.sessionId = #{sessionId}
            	) THEN TRUE
            	ELSE FALSE
        	END AS isLike
		FROM 
			post 
		LEFT JOIN
			(SELECT
				`like`.postKey,
				COUNT(`like`.postKey) AS likeCount
			FROM
				`like`
			GROUP BY
				`like`.postKey
			) AS likeSummary ON post.postKey = likeSummary.postKey
		LEFT JOIN
			user ON post.userKey = user.userKey
		LEFT JOIN
        	(SELECT 
            	comment.postKey, 
            	COUNT(comment.commentKey) AS commentCount 
         	FROM 
            	comment
         	GROUP BY 
            	comment.postKey
        ) AS commentSummary ON post.postKey = commentSummary.postKey
		WHERE 
			post.channelKey = #{channelKey}  AND post.state = 'common'
		ORDER BY
        	post.createdAt DESC
		LIMIT	
			#{offset},#{limit}

		
	</select>
	
	<select id="selectHash" parameterType="String" resultType="com.jwi.work.channel.dto.sqlDto.ImageInfoDto">
		SELECT imageKey,imageUrl,referenceCount FROM image WHERE imageHash = #{imageHash}
	</select>
	
	<select id="selectUrl" parameterType="String" resultType="com.jwi.work.channel.dto.sqlDto.ImageInfoDto">
		SELECT imageKey,imageUrl,referenceCount FROM image WHERE imageUrl = #{imageUrl}
	</select>
	
	<insert id="postCreate" parameterType="map">
		INSERT INTO post(userKey,channelKey,content,image) value (#{userKey},#{channelKey},#{content},#{imageJson})
	</insert>

	<insert id="insertImg" parameterType="map">
		INSERT INTO image(imageUrl,imageHash,referenceCount) value (#{imageUrl},#{imageHash},1)
	</insert>
	
	<update id="referenceUp" parameterType="int">
		UPDATE image set referenceCount = referenceCount + 1 WHERE imageKey = #{imageKey}
	</update>
	
	<update id="referenceDown" parameterType="int">
		UPDATE image set referenceCount = referenceCount - 1 WHERE imageKey = #{imageKey} 
	</update>

	<delete id="deleteImg" parameterType="int">
		DELETE FROM image WHERE imageKey = #{imageKey}
	</delete>

	<select id="postInfo" resultType="com.jwi.work.channel.dto.sqlDto.PostInfoDto" parameterType="int">
		SELECT userKey,image FROM post WHERE postKey = #{postKey}
	</select>
	
	<delete id="postDelete" parameterType="int">
		DELETE FROM post WHERE postKey = #{postKey}
	</delete>

	<select id="userKey" resultType="int" parameterType="String">
		SELECT IFNULL(userKey,0) FROM userConnection WHERE sessionId = #{sessionId}
	</select>

<!-- 	<update id= "postUpdate" parameterType="map">
		UPDATE post set content = #{content} , image = #{image} WHERE postKey = #{postKey}
	</update> -->


</mapper>